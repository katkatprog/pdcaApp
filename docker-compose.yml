version: "3.8"

services:
  front:
    build:
      context: ./front
      args:
        - FRONT_WORKDIR=$FRONT_WORKDIR
    tty: true
    stdin_open: true
    volumes:
      - ./front:$FRONT_WORKDIR
    ports:
      - "$FRONT_PORT:3000"
    # docker-compose起動時コマンド。プロジェクトディレクトリがある場合はアプリを起動し、ない場合はメッセージを出して待機
    command: >
      sh -c 
        "if [ -d $FRONT_PROJ_NAME ]; then 
          cd $FRONT_PROJ_NAME && yarn install && yarn start
        else
          echo 'Project Directory is not found...' && tail -f /dev/null
        fi" 
    depends_on:
      - api
  # entrypoint:
  #   - dockerize
  #   - -timeout
  #   - 60s
  #   - -wait
  #   - tcp://api:$API_PORT

  api:
    build:
      context: ./api
      args:
        - API_WORKDIR=$API_WORKDIR
    tty: true
    stdin_open: true
    volumes:
      - ./api:$API_WORKDIR
    ports:
      - "$API_PORT:3000"
      - "$PRISMA_STUDIO_PORT:5555"
    # docker-compose起動時コマンド。プロジェクトディレクトリがある場合はアプリを起動し、ない場合はメッセージを出して待機
    command: >
      sh -c 
        "if [ -d $API_PROJ_NAME ]; then 
          cd $API_PROJ_NAME && yarn install && yarn start:dev
        else
          echo 'Project Directory is not found...' && tail -f /dev/null
        fi" 
    depends_on:
      - db
  # entrypoint:
  #   - dockerize
  #   - -timeout
  #   - 60s
  #   - -wait
  #   - tcp://db:$DB_PORT

  db:
    image: postgres:12
    restart: always
    environment:
      TZ: Asia/Tokyo
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASS
      # POSTGRES_ROOT_PASSWORD: $DB_ROOT_PASS
    volumes:
      - db_store:/var/lib/postgresql/data
    ports:
      - $DB_PORT:5432
volumes:
  db_store:
