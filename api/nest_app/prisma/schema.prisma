// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cycle{
  id Int @default(autoincrement()) @id
  name String
  about String?
  goal String
  userId Int
  favorite Boolean @default(false)
  watchFromAnyone Boolean @default(false)
  erased Boolean @default(false)
  currentRound Int @default(1)
  suspend Boolean @default(false)
  plans Plan[]
  dos Do[]
  checks Check[]
  actions Action[]
}

model Plan{
  id Int @default(autoincrement()) @id
  cycle Cycle @relation(fields: [cycleId], references: [id])
  cycleId Int
  round Int @default(1)
  startDate DateTime?
  endDate DateTime?
  complete Boolean @default(false)
  tasks Task[]
}

model Do{
  id Int @default(autoincrement()) @id
  cycle Cycle @relation(fields: [cycleId], references: [id])
  cycleId Int
  round Int @default(1)
  complete Boolean @default(false)
}

model Check{
  id Int @default(autoincrement()) @id
  cycle Cycle @relation(fields: [cycleId], references: [id])
  cycleId Int
  round Int @default(1)
  complete Boolean @default(false)
}

model Action{
  id Int @default(autoincrement()) @id
  cycle Cycle @relation(fields: [cycleId], references: [id])
  cycleId Int
  round Int @default(1)
  complete Boolean @default(false)
}

model Task{
  id Int @default(autoincrement()) @id
  name String
  plan Plan @relation(fields: [planId], references: [id])
  planId Int
  about String?
  statusId Int
  startDate DateTime?
  endDate DateTime?
  status Status @relation(fields: [statusId], references: [id])
}

model Status{
  id Int @id
  name String
  tasks Task[]
}
